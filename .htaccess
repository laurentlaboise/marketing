# ==============================================================================
# .htaccess for WordsThatSells.website
# Revised for Security, Performance, and Multilingual URL Handling
# ==============================================================================

# --- 1. Rewrite Engine and Core Settings ---
# Enable the rewrite engine and set the base path.
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteBase /
</IfModule>

# Custom Error Pages for better user experience.
ErrorDocument 404 /404.html
ErrorDocument 500 /500.html

# --- 2. Security: Force HTTPS and Non-WWW ---
# Enforces a single, secure canonical domain for SEO and security.
<IfModule mod_rewrite.c>
    # Redirect HTTP to HTTPS
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

    # Redirect www.domain.com to domain.com (non-www)
    RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
    RewriteRule ^(.*)$ https://%1%{REQUEST_URI} [L,R=301]
</IfModule>

# --- 3. Security: HTTP Headers ---
# Mitigates common web vulnerabilities like XSS, clickjacking, and content sniffing.
<IfModule mod_headers.c>
    # Prevents clickjacking by not allowing the page to be rendered in an iframe.
    Header always set X-Frame-Options "DENY"
    
    # Prevents browsers from MIME-sniffing a response away from the declared content-type.
    Header always set X-Content-Type-Options "nosniff"
    
    # Controls how much referrer information is included with requests.
    Header always set Referrer-Policy "no-referrer-when-downgrade"
    
    # Content-Security-Policy: Prevents a wide range of attacks.
    # IMPORTANT: This is the most likely header to cause issues if a new external resource is added.
    # If something breaks, try commenting this line out first to diagnose.
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' https://cdn.tailwindcss.com https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://cdn.tailwindcss.com https://fonts.googleapis.com https://cdnjs.cloudflare.com; img-src 'self' data: https://placehold.co https://*.wordsthatsells.website; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com; connect-src 'self' https://generativelanguage.googleapis.com https://www.google-analytics.com; object-src 'none'; frame-src 'self' https://www.youtube.com; frame-ancestors 'none';"

    # Set Canonical URL Header ONLY for HTML documents.
    <FilesMatch "\.html$">
        Header set Link "<https://%{HTTP_HOST}%{REQUEST_URI}>; rel=\"canonical\""
    </FilesMatch>
</IfModule>

# --- 4. Performance: Compression (Brotli & GZIP/DEFLATE) ---
# Compresses text-based assets to significantly reduce load times.
<IfModule mod_brotli.c>
    AddOutputFilterByType BROTLI_COMPRESS text/html text/plain text/xml text/css application/javascript application/json image/svg+xml
</IfModule>
<IfModule mod_deflate.c>
    <IfModule mod_filter.c>
        AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css application/javascript application/json image/svg+xml
    </IfModule>
</IfModule>

# --- 5. Performance: Browser Caching ---
# Instructs browsers to cache static assets, reducing server load for repeat visitors.
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresDefault "access plus 1 month"
    
    # HTML documents
    ExpiresByType text/html "access plus 1 hour"
    
    # CSS, JS
    ExpiresByType text/css "access plus 1 week"
    ExpiresByType application/javascript "access plus 1 week"
    
    # Images, Fonts, Media (highly static)
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType image/x-icon "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"
</IfModule>

<IfModule mod_headers.c>
    # Set more granular Cache-Control headers.
    <FilesMatch "\.(jpg|jpeg|png|gif|webp|svg|ico|woff|woff2|ttf|otf|eot)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>
    <FilesMatch "\.(css|js)$">
        Header set Cache-Control "public, max-age=604800"
    </FilesMatch>
    <FilesMatch "\.html$">
        Header set Cache-Control "public, max-age=3600"
    </FilesMatch>
</IfModule>

# --- 6. URL Management: Clean URLs & Multilingual Handling ---
# This single, consolidated block handles removing .html and serving correct index files.
<IfModule mod_rewrite.c>
    # A. Redirect requests for .html files to their extensionless version.
    # e.g., /en/about.html -> /en/about
    RewriteCond %{THE_REQUEST} ^[A-Z]{3,9}\ /(.*)\.html [NC]
    RewriteRule ^(.*)\.html$ /$1 [R=301,L]

    # B. Internally rewrite extensionless URLs to the corresponding .html file.
    # This handles both root-level and language-specific paths.
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{DOCUMENT_ROOT}/%{REQUEST_URI}.html -f
    RewriteRule ^(.*)$ %{REQUEST_URI}.html [L]

    # C. Internally rewrite requests for a directory to its index.html file.
    # e.g., /en/services/ -> /en/services/index.html
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} -d
    RewriteRule ^(.*)$ $1/index.html [L]
</IfModule>

# --- 7. File Security: Disable Directory Browsing & Protect Files ---
# Disable directory listing to prevent snooping.
Options -Indexes

# Deny access to sensitive configuration, log, and source files.
<FilesMatch "\.(env|log|bak|sql|yml|json|md|lock|config|psd|ai)$">
    Require all denied
</FilesMatch>
<FilesMatch "^(\.git|\.vscode|node_modules|package\.json|composer\.json|gulpfile\.js|\.htaccess)$">
    Require all denied
</FilesMatch>

# --- 8. Performance: Keep-Alive ---
# Reduces latency by allowing multiple requests over a single connection.
<IfModule mod_headers.c>
    Header set Connection Keep-Alive
</IfModule>

# --- End of .htaccess ---
